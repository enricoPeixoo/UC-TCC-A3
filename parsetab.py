
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADICAO DECIMAL DIFERENTE DIRCHAVE DIRPARENTESE DIVISAO ENQUANTO ENTAO ENTRE ESCREVA ESQCHAVE ESQPARENTESE FAIXA FINALEXPRESSAO FOR FRASE IGUAL IGUALDADE INTEIRO LEIA MAIOR MAIORIGUAL MENOR MENORIGUAL MULTIPLICACAO SE SUBTRACAO VARIAVEL VIRGULAprograma : programa expressionprograma : expression : VARIAVEL IGUAL valor FINALEXPRESSAOvalor : INTEIRO\n             | DECIMAL\n             | FRASEexpression : expression ADICAO termexpression : termterm : INTEIROterm : DECIMALterm : FRASE'
    
_lr_action_items = {'VARIAVEL':([0,1,2,4,5,6,7,10,15,],[-2,3,-1,-8,-9,-10,-11,-7,-3,]),'INTEIRO':([0,1,2,4,5,6,7,8,9,10,15,],[-2,5,-1,-8,-9,-10,-11,5,12,-7,-3,]),'DECIMAL':([0,1,2,4,5,6,7,8,9,10,15,],[-2,6,-1,-8,-9,-10,-11,6,13,-7,-3,]),'FRASE':([0,1,2,4,5,6,7,8,9,10,15,],[-2,7,-1,-8,-9,-10,-11,7,14,-7,-3,]),'$end':([0,1,2,4,5,6,7,10,15,],[-2,0,-1,-8,-9,-10,-11,-7,-3,]),'ADICAO':([2,4,5,6,7,10,15,],[8,-8,-9,-10,-11,-7,-3,]),'IGUAL':([3,],[9,]),'FINALEXPRESSAO':([11,12,13,14,],[15,-4,-5,-6,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'expression':([1,],[2,]),'term':([1,8,],[4,10,]),'valor':([9,],[11,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> programa expression','programa',2,'p_programa','lex.py',120),
  ('programa -> <empty>','programa',0,'p_programa_vazio','lex.py',124),
  ('expression -> VARIAVEL IGUAL valor FINALEXPRESSAO','expression',4,'p_declaracao_variavel','lex.py',129),
  ('valor -> INTEIRO','valor',1,'p_valor','lex.py',134),
  ('valor -> DECIMAL','valor',1,'p_valor','lex.py',135),
  ('valor -> FRASE','valor',1,'p_valor','lex.py',136),
  ('expression -> expression ADICAO term','expression',3,'p_expression_adicao','lex.py',141),
  ('expression -> term','expression',1,'p_expression_term','lex.py',146),
  ('term -> INTEIRO','term',1,'p_term_number','lex.py',151),
  ('term -> DECIMAL','term',1,'p_term_decimal','lex.py',156),
  ('term -> FRASE','term',1,'p_term_string','lex.py',161),
]
